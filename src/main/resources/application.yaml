logging:
  level:
    root: INFO
    org.springframework.security: INFO

jwt:
  key:
    public: classpath:public_key.pem
    private: classpath:private_key.pem
    id: auth-server

# Public client
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:google-client-secret}
            scope:
              - email
              - profile
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID:facebook-client-id}
            client-secret: ${FACEBOOK_CLIENT_SECRET:facebook-client-secret}
            scope:
              - public_profile
      authorizationserver:
        client:
          public-client:
            registration:
              client-id: ${PUBLIC_CLIENT_ID:public-client}
              client-authentication-methods:
                - "none"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - ${PUBLIC_CLIENT_REDIRECT_URI:http://localhost:4200}
              scopes:
                - "openid"
                - "profile"
                - "read"
                - "write"
              post-logout-redirect-uris:
                - ${PUBLIC_CLIENT_POST_LOGOUT_URI:http://localhost:4200}
            require-authorization-consent: true
            require-proof-key: true